 
version: "3.1"
services:
  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      default:
        ipv4_address: 172.18.1.2
  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    ports:
        - "27017:27017"
    networks:
      default:
        ipv4_address: 172.18.1.3
    command: --bind_ip_all --smallfiles
    volumes:
      - mongo-db:/data

  orion:
    image: fiware/orion
    container_name: fiware-orion
    depends_on:
        - mongo-db
    networks:
      default:
        ipv4_address: 172.18.1.4
    expose:
        - "1026"
    ports:
        - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG

  iot-agent:
    image: fiware/iotagent-ul
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
      - mosquitto
    networks:
      default:
        ipv4_address: 172.18.1.5
    expose:
      - "4041"
    ports:
      - "4041:4041"
    environment:
      - "IOTA_CB_HOST=orion" # name of the context broker to update context
      - "IOTA_CB_PORT=1026" # port the context broker listens on to update context
      - "IOTA_NORTH_PORT=4041"
      - "IOTA_REGISTRY_TYPE=mongodb" #Whether to hold IoT device info in memory or in a database
      - "IOTA_LOG_LEVEL=DEBUG" #The log level of the IoT Agent
      - "IOTA_TIMESTAMP=true"
      - "IOTA_MONGO_HOST=mongo-db" # The host name of ongoDB
      - "IOTA_MONGO_PORT=27017" # The port mongoDB is listening on
      - "IOTA_MONGO_DB=iotagentul" # The name of the database used in mongoDB
      - "IOTA_MQTT_HOST=mosquitto" # The host name of the MQTT Broker
      - "IOTA_MQTT_PORT=1883" # The port the MQTT Broker is listening on to receive topics 
      - "IOTA_PROVIDER_URL=http://iot-agent:4041"

  cygnus:
    image: fiware/cygnus-ngsi:latest
    hostname: cygnus
    container_name: fiware-cygnus
    depends_on:
        - mongo-db
    networks:
      default:
        ipv4_address: 172.18.1.6
    expose:
        - "5080"
    ports:
        - "5050:5050"
        - "5080:5080"
    environment:
        - "CYGNUS_MONGO_HOSTS=mongo-db:27017"
        - "CYGNUS_LOG_LEVEL=DEBUG"
        - "CYGNUS_SERVICE_PORT=5050"
        - "CYGNUS_API_PORT=5080"

  squid:
    image: sameersbn/squid:3.5.27
    ports:
      - "3128:3128"
    networks:
      default:
        ipv4_address: 172.18.1.7
    volumes:
      - /srv/docker/squid/cache:/var/spool/squid
      - ./squid/squid.conf:/etc/squid/squid.conf
      - ./squid/htpasswd:/etc/squid/.htpasswd
    restart: always

  keyrock:
    image: fiware/idm:7.0.2
    container_name: fiware-keyrock
    hostname: keyrock
    networks:
      default:
        ipv4_address: 172.18.1.8
    depends_on:
      - mysql-db
    ports:
      - "3005:3005"
      - "3443:3443"
    environment:
      - DEBUG=idm:*
      - DATABASE_HOST=mysql-db
      - IDM_DB_PASS_FILE=/run/secrets/my_secret_data
      - IDM_DB_USER=root
      - IDM_HOST=http://localhost:3005
      - IDM_PORT=3005
      - IDM_HTTPS_ENABLED=${IDM_HTTPS_ENABLED}
      - IDM_HTTPS_PORT=3443
      - IDM_ADMIN_USER=accra
      - IDM_ADMIN_EMAIL=accra@mplpl.com
      - IDM_ADMIN_PASS=test
    secrets:                
      - my_secret_data

  mysql-db:
    restart: always
    image: mysql:5.7
    hostname: mysql-db
    container_name: db-mysql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    networks:
      default:
        ipv4_address: 172.18.1.9
    environment:
      - "MYSQL_ROOT_PASSWORD_FILE=/run/secrets/my_secret_data"
      - "MYSQL_ROOT_HOST=172.18.1.8"
    volumes:
      - mysql-db:/var/lib/mysql
      - ./mysql-data:/docker-entrypoint-initdb.d/:ro
    secrets:                
      - my_secret_data

networks:
  default:
    ipam:
      config:
        - subnet: 172.18.1.0/24
volumes:
  mongo-db:
  mysql-db:

secrets:
  my_secret_data:
    file: ./secrets.txt
